#!/bin/sh
### BEGIN INIT INFO
# Provides:          aesdsocket
# Required-Start:    $network
# Required-Stop:     $network
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start/stop aesdsocket daemon
### END INIT INFO

DAEMON=/usr/bin/aesdsocket  # Location of the binary
DAEMON_ARGS="-d"  # Runs aesdsocket in daemon mode
PIDFILE=/var/run/aesdsocket.pid  # PID file location
USER=root  # Change if needed
SIGNAL=TERM # Graceful terminate the process

case "$1" in
    start)
        echo "Starting aesdsocket server..."
        start-stop-daemon --start --quiet --background --make-pidfile --pidfile "$PIDFILE" --exec "$DAEMON" -- $DAEMON_ARGS
        if [ $? -eq 0 ]; then
            echo "aesdsocket started successfully."
        else
            echo "Failed to start aesdsocket."
            exit 1
        fi
        ;;
    
    stop)
        echo "Stopping aesdsocket server gracefully..."
        if [ -f "$PIDFILE" ]; then
            PID=$(cat "$PIDFILE")
            if kill -s $SIGNAL "$PID"; then
                echo "SIGTERM sent to aesdsocket (PID: $PID)."
                sleep 2  # Allow time for graceful shutdown
                if ps -p "$PID" > /dev/null 2>&1; then
                    echo "Process still running, forcing stop..."
                    kill -9 "$PID"
                fi
                rm -f "$PIDFILE"
                echo "aesdsocket stopped."
            else
                echo "Failed to stop aesdsocket."
                exit 1
            fi
        else
            echo "aesdsocket is not running."
            exit 3
        fi
        ;;
    
    restart)
        echo "Restarting aesdsocket server..."
        $0 stop
        sleep 1
        $0 start
        ;;
    
    status)
        if [ -f "$PIDFILE" ]; then
            PID=$(cat "$PIDFILE")
            if ps -p "$PID" > /dev/null 2>&1; then
                echo "aesdsocket is running (PID: $PID)"
                exit 0
            else
                echo "PID file exists but process not found."
                exit 1
            fi
        else
            echo "aesdsocket is not running."
            exit 3
        fi
        ;;
    
    *)
        echo "Usage: $0 {start|stop|restart|status}"
        exit 1
        ;;
esac
